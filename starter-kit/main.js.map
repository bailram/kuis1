{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content/content.component.css","webpack:///./src/app/content/content.component.html","webpack:///./src/app/content/content.component.ts","webpack:///./src/app/data/mahasiswa.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/server/server.component.css","webpack:///./src/app/server/server.component.html","webpack:///./src/app/server/server.component.ts","webpack:///./src/app/servers/servers.component.css","webpack:///./src/app/servers/servers.component.html","webpack:///./src/app/servers/servers.component.ts","webpack:///./src/app/shared/mahasiswa.ts","webpack:///./src/app/tugas/tugas.component.css","webpack:///./src/app/tugas/tugas.component.html","webpack:///./src/app/tugas/tugas.component.ts","webpack:///./src/app/tugas3/tugas3.component.css","webpack:///./src/app/tugas3/tugas3.component.html","webpack:///./src/app/tugas3/tugas3.component.ts","webpack:///./src/app/week5/week5.component.css","webpack:///./src/app/week5/week5.component.html","webpack:///./src/app/week5/week5.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h1> {{ title }} </h1>\\n      <hr/>-->\\n      <!--<app-server></app-server>-->\\n      <!-- <div app-server></div> --> <!-- property selector -->\\n      <!-- <div class=\\\"app-server\\\"></div> --> <!-- class selector -->\\n      <!--<app-servers></app-servers>-->\\n      <!--<app-tugas></app-tugas>-->\\n      <!--<app-tugas3></app-tugas3>-->\\n      <!--<app-week5></app-week5>-->\\n    <!--</div>\\n  </div>\\n</div>-->\\n<app-header></app-header>\\n<app-content></app-content>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'starter-kit';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ServerComponent } from '../app/server/server.component';\nimport { ServersComponent } from './servers/servers.component';\nimport { TugasComponent } from './tugas/tugas.component';\nimport { Tugas3Component } from './tugas3/tugas3.component';\nimport { Week5Component } from './week5/week5.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContentComponent } from './content/content.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServerComponent,\n    ServersComponent,\n    TugasComponent,\n    Tugas3Component,\n    Week5Component,\n    HeaderComponent,\n    ContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".font{\\r\\n    color: #007bff\\r\\n}\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2 [ngClass]=\\\"{'font': true}\\\">Form Data Mahasiswa</h2>\\n      <hr>\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"nim\\\" [ngClass]=\\\"{'font': true}\\\">NIM</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nim\\\" id=\\\"nim\\\" [(ngModel)]=\\\"nim\\\">\\n          <label for=\\\"nama\\\" [ngClass]=\\\"{'font': true}\\\">Nama</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nama\\\" id=\\\"nama\\\" [(ngModel)]=\\\"nama\\\">\\n          <label for=\\\"kelas\\\" [ngClass]=\\\"{'font': true}\\\">Kelas</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"kelas\\\" id=\\\"kelas\\\" [(ngModel)]=\\\"kelas\\\">\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"tambahMhs()\\\">Tambah</button>\\n      </form>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <h2 [ngClass]=\\\"{'font': true}\\\">Data Mahasiswa</h2>\\n      <hr>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12 mt-3\\\" *ngFor=\\\"let mhs of daftarMhs\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                <h3 [ngClass]=\\\"{'font': true}\\\">{{ mhs.nama }}</h3>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\" [ngClass]=\\\"{'font': true}\\\">{{ mhs.nim }}</h5>\\n                <p class=\\\"card-text\\\" [ngClass]=\\\"{'font': true}\\\">{{ mhs.kelas }}</p>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Mahasiswa } from '../data/mahasiswa';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n  nim=\"\";\n  nama=\"\";\n  kelas=\"\";\n  daftarMhs:Mahasiswa[] = [];\n  mhs;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  tambahMhs(){\n    this.mhs = new Mahasiswa(this.nim, this.nama, this.kelas);\n    this.daftarMhs.push(this.mhs);\n    this.nim=\"\";\n    this.nama=\"\";\n    this.kelas=\"\";\n  }\n  \n}\n","export class Mahasiswa {\r\n    constructor(public nim:string, public nama:string, public kelas:string){\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Master Data</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>Server with ID {{ serverID }} is {{ getServerStatus() }}</p>\\r\\n<!-- <p>Server with {{ '15' }} is {{ 'online' }}</p> -->\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-server',\n    // selector: '[app-server]', // property selector\n    // selector: '.app-server', // class selector\n    templateUrl: './server.component.html',\n    styleUrls: ['./server.component.css']\n})\n\nexport class ServerComponent {\n    serverID:number = 1731710084;\n    serverStatus = 'offline';\n\n    getServerStatus(){\n        return this.serverStatus;\n    }\n}","module.exports = \"\"","module.exports = \"<label>Server Name</label>\\n<!-- <input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  (input)=\\\"onUpdateServerName($event)\\\"> -->\\n<input \\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  [(ngModel)]=\\\"serverName\\\">\\n<p>{{ serverName }}</p>\\n<button \\n  class=\\\"btn btn-primary\\\" \\n  [disabled]=\\\"!allowNewServer\\\"\\n  (click)=\\\"onCreationStatus()\\\">Add Server</button>\\n<!-- <p>{{ serverCreationStatus }}</p> -->\\n<p *ngIf=\\\"serverCreated; else noServer\\\">Server telah dibuat, nama server adalah {{ serverName }}</p>\\n<ng-template #noServer>\\n  <p>No server was created</p>\\n</ng-template>\\n<app-server></app-server>\\n<app-server></app-server>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = 'Tidak ada server baru yang telah dibuat!';\n  serverName = 'TestServer';\n  serverCreated = false;\n\n  constructor() {\n    // () => {} adalah arrow function atau lamda --> fitur ES6 javascript\n    setTimeout(()=> {\n      this.allowNewServer = true;\n    }, 2000)\n  }\n\n  ngOnInit() {\n  }\n\n  onCreationStatus() {\n    this.serverCreated = true;\n    this.serverCreationStatus = 'Server telah dibuat!';\n  }\n\n  onUpdateServerName(event: Event) {\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n\n}","export class Mahasiswa {\n    constructor(public nim:string, public nama:string, public alamat:string){\n    }\n}\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\">\\n<p>{{ username }}</p>\\n<p>{{ unableInput }}</p>\\n<button class=\\\"btn btn-primary\\\" [disabled]=\\\"username ===''\\\" (click)=\\\"onResetUsername()\\\">Update</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tugas',\n  templateUrl: './tugas.component.html',\n  styleUrls: ['./tugas.component.css']\n})\nexport class TugasComponent implements OnInit {\n  username= '';\n\n  constructor(){ }\n\n  onUpdateUsername(event: Event){\n    this.username = (<HTMLInputElement>event.target).value;\n  }\n\n  onResetUsername(){\n    this.username = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".text{\\r\\n    color: white;\\r\\n}\"","module.exports = \"<button \\n  class=\\\"btn btn-primary\\\" \\n  (click)=\\\"onClickDetail()\\\">Tampilkan Detail</button>\\n  <p>{{ detailName }}</p>\\n  <div *ngFor=\\\"let data of log\\\">\\n  <p [ngStyle] = \\\"{'background-color': data>=5? '#007bff' : 'white'}\\\"\\n    [ngClass] = \\\"{text: data >= 5}\\\">\\n    {{ data }}\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tugas3',\n  templateUrl: './tugas3.component.html',\n  styleUrls: ['./tugas3.component.css']\n})\nexport class Tugas3Component implements OnInit {\n  status = true;\n  detailName = \"\";\n  log=[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClickDetail(){\n    this.log.push(this.log.length+1);\n    if(this.status === true){\n      this.detailName = \"Watashi Ga Kita!!!\";\n      this.status = false;  \n    }else{\n      this.detailName = \"\";\n      this.status = true;\n    }\n  }\n\n}\n\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <label for=\\\"nim\\\">NIM</label>\\n      <input type=\\\"text\\\" name=\\\"nim\\\" id=\\\"nim\\\"class=\\\"form-control\\\" [(ngModel)]=\\\"nim\\\">\\n      <label for=\\\"nama\\\">Nama</label>\\n      <input type=\\\"text\\\" name=\\\"nama\\\" id=\\\"nama\\\"class=\\\"form-control\\\" [(ngModel)]=\\\"nama\\\">\\n      <label for=\\\"alamat\\\">Alamat</label>\\n      <textarea name=\\\"alamat\\\" id=\\\"alamat\\\" cols=\\\"10\\\" rows=\\\"5\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"alamat\\\"></textarea>\\n      <br>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"tambahMhs()\\\">Tambah Mahasiswa</button>\\n    </div>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\" *ngFor=\\\"let mhs of daftarMhs\\\">\\n          <h3>{{ mhs.nama }}</h3>\\n          <h4>{{ mhs.nim }}</h4>\\n          <p>{{ mhs.alamat }}</p>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Mahasiswa} from '../shared/mahasiswa';\n\n@Component({\n  selector: 'app-week5',\n  templateUrl: './week5.component.html',\n  styleUrls: ['./week5.component.css']\n})\nexport class Week5Component implements OnInit {\n  nim=\"\";\n  nama=\"\";\n  alamat=\"\";\n  daftarMhs:Mahasiswa[] = [];\n  mhs;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  tambahMhs(){\n    this.mhs = new Mahasiswa(this.nim, this.nama, this.alamat);\n    this.daftarMhs.push(this.mhs);\n    this.nim=\"\";\n    this.nama=\"\";\n    this.alamat=\"\";\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}